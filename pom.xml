<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.sun</groupId>
    <artifactId>java-tutorials</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>${project.artifactId}</name>
    <description>
        The Java™ Tutorials are practical guides for programmers (程序员的实践指南).
    </description>
    <url>https://github.com/EdwardLee03/Java-Tutorials</url>

    <properties>
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <!-- ============ Logging（日志记录） ============ -->
        <!-- Logback - http://logback.qos.ch/ -->
        <!-- Documentation - http://logback.qos.ch/documentation.html -->
        <!-- Reasons to prefer logback over log4j - http://logback.qos.ch/reasonsToSwitch.html -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.2.0</version>
        </dependency>
        <!-- SLF4J: Simple Logging Facade for Java - http://www.slf4j.org/ -->
        <!-- User Manual - http://www.slf4j.org/manual.html -->
        <!-- Documentation - http://www.slf4j.org/docs.html -->
        <!--<dependency>-->
        <!--<groupId>org.slf4j</groupId>-->
        <!--<artifactId>slf4j-api</artifactId>-->
        <!--<version>${slf4j.version}</version>-->
        <!--</dependency>-->

        <!-- ============ Test（测试） ============ -->
        <!-- TestNG - http://testng.org/doc/index.html -->
        <!-- Documentation - http://testng.org/doc/documentation-main.html -->
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>6.9.9</version>
            <scope>test</scope>
        </dependency>
        <!-- AssertJ - http://joel-costigliola.github.io/assertj/ -->
        <!-- Quick start - http://joel-costigliola.github.io/assertj/assertj-core-quick-start.html -->
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <!-- use 3.1.0 for Java 8 projects -->
            <version>2.1.0</version>
            <scope>test</scope>
        </dependency>
        <!-- Mockito - http://site.mockito.org/ -->
        <!-- Mockito API - http://site.mockito.org/mockito/docs/current/org/mockito/Mockito.html -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>1.10.19</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <!-- InfoQ Maven专栏（三）——多模块项目的POM重构 -->
            <!-- 消除多模块插件配置重复 -->
            <plugins>
                <!-- 强制限制 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>1.4</version>
                    <executions>
                        <execution>
                            <id>enforce-constraints</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <!-- Standard Rules - http://maven.apache.org/enforcer/enforcer-rules/index.html -->
                                <rules>
                                    <requireJavaVersion>
                                        <version>[1.7.0-80,)</version>
                                        <message>JDK's version must be higher than 1.7.0_80 or 1.8.0_45+</message>
                                    </requireJavaVersion>
                                    <requireMavenVersion>
                                        <version>[3.0,)</version>
                                        <message>Maven's version must be higher than 3.0</message>
                                    </requireMavenVersion>
                                    <bannedDependencies>
                                        <excludes>
                                            <!-- Log4j 2 -->
                                            <exclude>org.apache.logging.log4j</exclude>
                                            <!-- Log4j 1 -->
                                            <exclude>log4j</exclude>
                                        </excludes>
                                    </bannedDependencies>
                                    <requireReleaseDeps>
                                        <message>No Snapshots Allowed!</message>
                                    </requireReleaseDeps>
                                    <reactorModuleConvergence>
                                        <ignoreModuleDependencies>true</ignoreModuleDependencies>
                                        <message>The reactor is not valid</message>
                                    </reactorModuleConvergence>
                                </rules>
                                <fail>true</fail>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!-- FAQ - How do I set up Maven so it will compile with a target and source JVM of my choice? -->
                <!-- 配置JDK编译版本 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.3</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <encoding>${project.build.sourceEncoding}</encoding>
                    </configuration>
                </plugin>
                <!-- XML、properties文件都是资源文件，编码的时候遇到中文总要进行转码！用什么编码？UTF-8 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>2.7</version>
                    <configuration>
                        <encoding>${project.build.sourceEncoding}</encoding>
                    </configuration>
                </plugin>
                <!-- [单元、集成]测试 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.18.1</version>
                    <configuration>
                        <!-- Running Tests in Parallel -->
                        <parallel>methods</parallel>
                        <threadCount>8</threadCount>
                        <!-- Examples - Using TestNG -->
                        <suiteXmlFiles>
                            <suiteXmlFile>testng.xml</suiteXmlFile>
                        </suiteXmlFiles>
                    </configuration>
                </plugin>
                <!-- Cookbook: How to attach source and javadoc artifacts? - https://maven.apache.org/plugin-developers/cookbook/attach-source-javadoc-artifacts.html -->
                <!-- 生成源码包和API文档包的命令：mvn clean package source:jar javadoc:jar -Dmaven.test.skip=true -->
                <!-- 生成源码包 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>2.4</version>
                    <executions>
                        <!-- Usage - Installing the sources using a phase binding -->
                        <execution>
                            <id>attach-sources</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- 生成API文档包 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>2.10.3</version>
                    <configuration>
                        <show>private</show>
                        <nohelp>true</nohelp>
                    </configuration>
                    <executions>
                        <execution>
                            <id>aggregate</id>
                            <phase>site</phase>
                            <goals>
                                <goal>aggregate</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- 生成项目站点 -->
                <!-- FAQ - Handle special characters in site -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.4</version>
                    <configuration>
                        <outputEncoding>${project.build.sourceEncoding}</outputEncoding>
                        <locales>cn,en</locales>
                    </configuration>
                </plugin>
                <!-- 部署项目jar包到远程中央仓库 -->
                <!-- Deploy sources and javadoc jars - https://maven.apache.org/plugins/maven-deploy-plugin/examples/deploying-sources-javadoc.html -->
                <!-- Maven Deploy Plugin > Usage - https://maven.apache.org/plugins/maven-deploy-plugin/usage.html -->
                <!-- deploy:deploy-file - https://maven.apache.org/plugins/maven-deploy-plugin/deploy-file-mojo.html -->
                <!-- 部署源码包和API文档包到远程中央仓库的命令：
                    mvn deploy:deploy-file -Durl=http://maven.mogujie.org/nexus/content/repositories/snapshots \
                                           -DrepositoryId=snapshots \
                                           -DpomFile=pom.xml \
                                           -Dfile=target/ferrari-api-1.0-SNAPSHOT.jar \
                                           -Dsources=target/ferrari-api-1.0-SNAPSHOT-sources.jar \
                                           -Djavadoc=target/ferrari-api-1.0-SNAPSHOT-javadoc.jar
                 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <!-- Maven Resources Plugin - Filtering - http://maven.apache.org/plugins/maven-resources-plugin/examples/filter.html -->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering><!-- 启用过滤功能 -->
            </resource>
        </resources>
    </build>
</project>
